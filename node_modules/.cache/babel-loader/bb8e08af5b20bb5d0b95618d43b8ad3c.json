{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuan/Desktop/react-task-tracker/src/App.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n      console.log(data);\n    };\n\n    fetchTasks();\n  }, []); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onAdd: () => setShowAddTask(!showAddTask),\n    showAdd: showAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), showAddTask && /*#__PURE__*/React.createElement(AddTask, {\n    onAdd: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }), tasks.length > 0 ? /*#__PURE__*/React.createElement(Tasks, {\n    tasks: tasks,\n    onDelete: deleteTask,\n    onToggle: toggleReminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }\n  }) : 'No Tasks To Show');\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zhangyuan/Desktop/react-task-tracker/src/App.js"],"names":["React","useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","res","fetch","data","json","console","log","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAJD;;AAKAH,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT,CAJa,CAab;;AACA,QAAMO,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAACJ,MAAAA,EAAD;AAAK,SAAGD;AAAR,KAAhB;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAJD,CAda,CAoBb;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBV,IAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CArBa,CAyBb;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BV,IAAAA,QAAQ,CAACD,KAAK,CAACmB,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACU;AAA3B,KAAjB,GAAyDV,IAA7E,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAAnC;AAAmD,IAAA,OAAO,EAAEA,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGA,WAAW,iBAAI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEW,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlB,EAGGT,KAAK,CAACqB,MAAN,GAAe,CAAf,gBAAoB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAErB,KAAd;AAAqB,IAAA,QAAQ,EAAEgB,UAA/B;AAA2C,IAAA,QAAQ,EAAEE,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAAgG,kBAHnG,CADF;AAOD;;AAED,eAAerB,GAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\"\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const res = await fetch('http://localhost:5000/tasks')\r\n      const data = await res.json()\r\n      console.log(data)\r\n    }\r\n    fetchTasks()\r\n  }, [])\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 10000) + 1\r\n    const newTask = {id, ...task }\r\n    setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // delete task\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n      {showAddTask && <AddTask onAdd={addTask} />}\r\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks To Show')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}