{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuan/Desktop/react-task-tracker/src/App.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks/', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = {id, ...task }\n    // setTasks([...tasks, newTask])\n  }; // delete task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onAdd: () => setShowAddTask(!showAddTask),\n    showAdd: showAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), showAddTask && /*#__PURE__*/React.createElement(AddTask, {\n    onAdd: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }), tasks.length > 0 ? /*#__PURE__*/React.createElement(Tasks, {\n    tasks: tasks,\n    onDelete: deleteTask,\n    onToggle: toggleReminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  }) : 'No Tasks To Show');\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zhangyuan/Desktop/react-task-tracker/src/App.js"],"names":["React","useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","deleteTask","id","filter","toggleReminder","map","reminder","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\"\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n    \r\n    return data\r\n  }\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = {id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // delete task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n      {showAddTask && <AddTask onAdd={addTask} />}\r\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks To Show')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}