{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","background","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","key","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1587c9aa.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n        <div>\n            <button onClick={onClick} style={{background: color}} className='btn'>{text}</button>\n        </div>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Todo List',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''} `} onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text} \n                <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n          {tasks.map((task, index) => (\n            <Task \n              key={index} \n              task={task} \n              onDelete={onDelete} \n              onToggle={onToggle} />\n            ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n\n    onAdd({ text, day, reminder })\n\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & Time'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddTask","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer>\n           <p>Copyright &copy; 2022 </p> \n           <a href='https://github.com/YvonneTech/React-Todo-List' target = \"_blank\"> GitHub Repository</a>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\r\nimport { useState, useEffect } from \"react\"\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport Footer from './components/Footer'\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n    \r\n    return data\r\n  }\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n      const data = await res.json()\r\n      \r\n      return data\r\n    }\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = {id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // delete task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT', \r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updTask),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) => \r\n        task.id === id ? { ...task, reminder: data.reminder } : task\r\n        )\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n        {showAddTask && <AddTask onAdd={addTask} />}\r\n        {tasks.length > 0 ? (\r\n        <Tasks \r\n            tasks={tasks} \r\n            onDelete={deleteTask} \r\n            onToggle={toggleReminder} />\r\n        ) : (\r\n          'No Tasks To Show'\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}